{"version":3,"file":"main.f57fee17a6ed9f763c6b.hot-update.js","sources":["webpack:///./src/server/previews.js"],"sourcesContent":["export default {\n  basic: {\n    \"default-node\": {\n      title: \"默认-边\",\n      code: `<script type=\"text/babel\">\n  const { Graph } = window['g6-for-react'];\n  class Demo extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        data: {\n          nodes: [{\n            id: 'node1',\n            x: 100,\n            y: 200,\n            size: 40,\n            label: '节点1'\n          }, {\n            id: 'node2',\n            x: 300,\n            y: 200,\n            color: '#eb2f96',\n            label: '节点2'\n          }],\n          edges: [{\n            id: 'edge1',\n            target: 'node2',\n            source: 'node1'\n          }]\n        }\n      };\n    }\n  \n    render() {\n      return (\n        <div className=\"graph\">\n          <div className=\"graph-basic\">\n            <Graph fitView=\"cc\" animate={true} height={window.innerHeight} data={this.state.data}></Graph>\n          </div>\n        </div>\n      );\n    }\n  }\n  ReactDOM.render(<Demo />, document.getElementById('mountNode'));\n</script>`\n    },\n    \"default-edge\": {\n      title: '默认-边',\n      code: `<script type=\"text/babel\">\n  const { Graph } = window['g6-for-react'];\n  class Demo extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        data: {\n          nodes: [{\n            id: 'node1',\n            x: 100,\n            y: 200\n          }, {\n            id: 'node2',\n            x: 300,\n            y: 200\n          }],\n          edges: [{\n            source: 'node1',\n            target: 'node2',\n            label: '普通边'\n          }, {\n            source: 'node1',\n            target: {\n              x: 100,\n              y: 50\n            },\n            label: '单向悬空边'\n          }, {\n            source: {\n              x: 150,\n              y: 50\n            },\n            target: {\n              x: 150,\n              y: 100\n            },\n            label: '双向悬空边'\n          }, {\n            source: 'node1',\n            target: {\n              x: 100,\n              y: 280\n            },\n            style: {\n              endArrow: true\n            },\n            label: '箭头'\n          }, {\n            source: 'node1',\n            target: {\n              x: 10,\n              y: 200\n            },\n            sizesize: 4,\n            label: '粗细'\n          }, {\n            source: 'node2',\n            target: {\n              x: 400,\n              y: 200\n            },\n            color: 'red',\n            label: '颜色'\n          }]\n        }\n      };\n    }\n  \n    render() {\n      return (\n        <div className=\"graph\">\n          <div className=\"graph-basic\">\n            <Graph fitView=\"cc\" animate={true} height={window.innerHeight} data={this.state.data}></Graph>\n          </div>\n        </div>\n      );\n    }\n  }\n  ReactDOM.render(<Demo />, document.getElementById('mountNode'));`\n    },\n    \"default-group\": {\n      title: '默认-分组',\n      code: `<script type=\"text/babel\">\n  const { Graph } = window['g6-for-react'];\n  class Demo extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        data: {\n          nodes: [{\n            id: 'node1',\n            x: 100,\n            y: 200,\n            label: '节点1',\n            parent: 'group1'\n          }, {\n            id: 'node2',\n            x: 300,\n            y: 200,\n            label: '节点2',\n            parent: 'group1'\n          }, {\n            id: 'node3',\n            x: 100,\n            y: 300,\n            label: '节点3',\n            parent: 'group2'\n          }, {\n            id: 'node4',\n            x: 300,\n            y: 300,\n            label: '节点4',\n            parent: 'group2'\n          }],\n          edges: [{\n            id: 'edge1',\n            target: 'node2',\n            source: 'node1'\n          }],\n          groups: [{\n            id: 'group1',\n            label: '展开群组'\n          }, {\n            id: 'group2',\n            label: '折叠群组',\n            collapsed: true\n          }]\n        }\n      };\n    }\n  \n    render() {\n      return (\n        <div className=\"graph\">\n          <div className=\"graph-basic\">\n            <Graph fitView=\"cc\" animate={true} height={window.innerHeight} data={this.state.data}></Graph>\n          </div>\n        </div>\n      );\n    }\n  }\n  ReactDOM.render(<Demo />, document.getElementById('mountNode'));`\n    }\n  }\n}"],"mappingssourceRoot":""}